[
	{
		"num": 1,
		"title": "Welcome to Python!",
		"visible": true,
		"days": [
			{
				"title": "Welcome to Python!",
				"date": "2020-01-06",
				"active": false,
				"description": "Hello world! Welcome to CS41. In this lecture, students will be introduced to the course and to the basic building blocks of Python. We will cover the interactive interpreter, variables and types, numbers and booleans, strings and lists, string formatting, control flow, loops, and functions."
			},
			{
				"title": "Python Basics",
				"date": "2020-01-08",
				"active": false,
				"description": "Our rapid progression through Python fundamentals continues, as we cover comments, console I/O, and file I/O, running Python as a script, modules, imports, and virtual environments."
			}
		],
		"dates": {
			"start": "2020-01-06",
			"end": "2020-01-10"
        },
        "assignments": "Assignment 0 - Welcome to Python!",
        "assignmentLink": null
	},
    {
    	"num": 2,
    	"title": "Data Structures",
    	"visible": true,
    	"days": [
    		{
    			"title": "Data Structures",
    			"date": "2020-01-13",
    			"active": false,
    			"description": "In this lecture, we'll dive into Python's standard tools for data manipulation. Together with a review of lists from last week, we'll see dictionaries, tuples, and sets, along with all of their common operators (and even a few uncommon ones!). We briefly look at a few looping techniques (enumerate, zip), and then dive into comprehensions."
    		},
    		{
    			"title": "Data Structures Lab",
    			"date": "2020-01-15",
    			"active": false,
    			"description": "The first full-length lab of CS41 features a wide collection of small problems, selected to practice topics from the first three course lectures, and to solidify course concepts."
    		}
    	],
    	"dates": {
    		"start": "2020-01-13",
    		"end": "202-01-17"
    	},
        "assignments": "Assignment 0 - Welcome to Python!",
        "assignmentLink": null
    },
    {
    	"num": 3,
    	"title": "Object-Oriented Python",
    	"visible": true,
    	"days": [
    		{
    			"title": "Object-Oriented Python",
    			"date": "2020-01-13",
    			"active": false,
    			"description": "Python provides builtin support for the object oriented programming paradigm. In this lecture, we will explore namespaces and scope, the Python data model, class objects, and inheritance. We will review the difference between class objects and instance objects, and we will learn about methods associated with class objects as well as Python's special 'magic methods'."
    		},
    		{
    			"title": "Object-Oriented Python Lab",
    			"date": "2020-01-15",
    			"active": false,
    			"description": "In this lab, students will deepen their understanding of object-oriented programming in Python by writing classes and methods. We start with simple classes - first writing a class to represent a Stanford class - and gradually build in complexity to implement a graph and associated graph algorithms, and a class which represents a polynomial, and which uses Python's magic methods to hook into Python's builtin mathematical operations."
    		}
    	],
    	"dates": {
    		"start": "2020-01-13",
    		"end": "202-01-17"
    	},
        "assignments": "Assignment 1 - Cryptography",
        "assignmentLink": null
    },
    {
        "num": 4,
        "title": "Functions",
        "visible": true,
        "days": [
            {
                "title": "Functions",
                "date": "2020-01-22",
                "active": false,
                "description": "We've seen functions in other languages, but Python gives us additional tools in defining and calling functions. After reviewing some nuances in the function execution model regarding return values, scope, and pass-by semantics, we'll see keyword arguments alongside their familiar positional counterparts. We'll discuss positional arguments, keyword arguments, default arguments, and their relation to str.format. Lastly, we peek into an odd quirk of Python - that functions are objects, and can be treated as such."
            },
            {
                "title": "Functions Lab",
                "date": "2020-01-22",
                "active": false,
                "description": ""
            }
        ],
        "dates": {
            "start": "2020-01-20",
            "end": "2020-01-24"
        },
        "assignments": "Assignment 1 - Cryptography",
        "assignmentLink": null
    },
    {
        "num": 5,
        "title": "Functional Programming",
        "visible": true,
        "days": [
            {
                "title": "Functional Programming",
                "date": "2020-01-27",
                "active": false,
                "description": "We first discuss functional programming's place in the landscape of programming paradigms - what makes this different from Java and C++ - and then introduce the concept of higher-order functions through map and filter, and anonymous lambda functions. We'll understand iterators, generator expressions, and generators as core ideas in functional programming, and briefly talk about where these tools could show up in Python. Lastly, we'll go over decorators - an amazing application of functional programming ideas to solve common programming problems."
            },
            {
                "title": "Functions and Functional Programming Lab",
                "date": "2020-01-29",
                "active": false,
                "description": "This lab first drills function argument rules, then asks students to write functions utilizing the new superpowers offered by Python functions. Several function nuances are covered, including the danger of mutable default values. Then, we conduct a more thorough investigation of function objects and their attributes, at least in CPython. After, we'll use functions to explore the new programming paradigm that we've found in Python. We'll practice with map, filter, and lambda, and then explore functools.reduce and the operator module for more depth. As a thought experiment, we briefly discuss how to convert iterative Python code to functional code, and then practice with iterators and generators, using the itertools module to build power operators from linear algebra in under ten lines of Python. Closure semantics are also reviewed as a preview for the main event - writing decorators!"
            }
        ],
        "dates": {
            "start": "2020-01-27",
            "end": "2020-01-31"
        },
        "assignments": "Assignment 2 - Quest for the Unicorn!",
        "assignmentLink": null
    },
    {
        "num": 6,
        "title": "Python and the Web",
        "visible": true,
        "days": [
            {
                "title": "Python and the Web",
                "date": "2020-02-03",
                "active": false,
                "description": "We'll begin with an introduction to object-oriented programming in Python and a discussion of classes. Then, we'll turn to one of the most exciting applications of Python: it interacts so well with the internet. We'll start with using Python to query and parse websites. We'll talk about the design of websites and web languages like HTML and JSON. Then we'll discuss how to use Python to interact with these technologies by querying websites and parsing the response. We'll take a relevant detour to discuss Python's image processing libraries and how to process images on the web. After that, we'll transition to server-side web development and discuss how to build websites backed by Python. This lecture is the most demo-heavy of the quarter and by the end, we'll build an anagrammer application, backed by Python."
            },
            {
                "title": "Web Requests Lab",
                "date": "2020-02-05",
                "active": false,
                "description": "This lab is very free-form. Students can choose to implement a Reddit Wallpaper Scraper, which was a former assignment in CS 41, or students can work on pretty much anything else! It's getting to be midterm season, and we want everyone to enjoy themselves, and have fun learning Python in a low-stress environment. Students could choose to explore more Python functions and features, start a final project, or work on Assignment 2 - Quest for the Unicorn!."
            }
        ],
        "dates": {
            "start": "2020-02-03",
            "end": "2020-02-07"
        },
        "assignments": "Assignment 2 - Quest for the Unicorn!",
        "assignmentLink": null
    },
    {
        "num": 7,
        "title": "Standard Libraries",
        "visible": true,
        "days": [
            {
                "title": "Standard Libraries",
                "date": "2020-02-19",
                "active": true,
                "description": "To many, the most important feature of a programming language is not syntax or program flow, but rather the work that prior programmers have put in to make routine computations straightforward. In this lecture, we teach students to explore Python's standard libraries. We first cover the basics of reading documentation, then we delve into the the rich depth and diversity of libraries that Python has to offer. We explore pdb, Python's debugging library, and move into specialized containers, regex tools, customizable iterators, and system-level interactions. If there's time, we explore temporal modules, like timeit and datetime, and libraries for file compression."
            },
            {
                "title": "Standard Libraries Lab",
                "date": "2020-02-17",
                "active": false,
                "description": "Students will contemplate the standard libraries and the unsolved mysteries of the universe. Any students who solve a previously-unsolved mysteries of the universe will earn extra credit."
            }
        ],
        "dates": {
            "start": "2020-02-17",
            "end": "2020-02-21"
        },
        "assignments": "Final Project",
        "assignmentLink": null
    },
    {
        "num": 8,
        "title": "Third-Party Packages",
        "visible": true,
        "days": [
            {
                "title": "Third-Party Packages",
                "date": "2020-02-19",
                "active": true,
                "description": "Though the Python standard libraries contain a substantial number of useful tools, the Python community has also built up a series of third-party libraries for various applications. In this lecture, we introduce students to Pypi.org and third-party Python packages, after which we provide a survey of some of these libraries, including [TODO - add this list once finalized]."
            },
            {
                "title": "Third-Party Packages Lab",
                "date": "2020-02-17",
                "active": false,
                "description": "Students will contemplate third-party Python packages and the unsolved mysteries of the universe. Any students who solve a previously-unsolved mysteries of the universe will earn extra credit."
            }
        ],
        "dates": {
            "start": "2020-02-17",
            "end": "2020-02-21"
        },
        "assignments": "Final Project",
        "assignmentLink": null
    },
    {
        "num": 9,
        "title": "Python in the Real World",
        "visible": true,
        "days": [
            {
                "title": "Student-Choice Lecture",
                "date": "2020-02-19",
                "active": true,
                "description": "Parth, Michael, and the TAs will give 'lightning lectures,' 10-15 minute lectures/demonstrations on topics of students' choice."
            },
            {
                "title": "Guest Lecture",
                "date": "2020-02-17",
                "active": false,
                "description": "A guest lecture by a super cool visitor."
            }
        ],
        "dates": {
            "start": "2020-02-17",
            "end": "2020-02-21"
        },
        "assignments": "Final Project",
        "assignmentLink": null
    },
    {
        "num": 10,
        "title": "Final Project",
        "visible": true,
        "days": [
            {
                "title": "Final Project Work Period",
                "date": "2020-02-19",
                "active": true,
                "description": "It's dead week - you deserve a break. This lecture will be a final project work period in which TAs will be circulating to help students as they work on their CS41 final projects."
            },
            {
                "title": "Final Project Presentations",
                "date": "2020-02-17",
                "active": false,
                "description": "Students will have the opportunity to share their final projects with the class."
            }
        ],
        "dates": {
            "start": "2020-02-17",
            "end": "2020-02-21"
        },
        "assignments": "None - Good Luck with Finals!",
        "assignmentLink": null
    }
]